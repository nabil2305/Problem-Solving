Q-Given a matrix of m * n elements (m rows, n columns), return all elements of the matrix in spiral order.

Example:

Given the following matrix:

[
    [ 1, 2, 3 ],
    [ 4, 5, 6 ],
    [ 7, 8, 9 ]
]
You should return

[1, 2, 3, 6, 9, 8, 7, 4, 5]

SOlution-

public class Solution 
{
    // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    public int[] spiralOrder(final int[][] A) 
    {
     int m=A.length;
     int n=A[0].length;
     int ans[]=new int[m*n];
     int c=0;
     int T=0,B=m-1,L=0,R=n-1,dir=0;
     while(T<=B && L<=R)
     {
         if(dir==0)
         {
             for(int i=L;i<=R;i++)
             {
                 ans[c++]=A[T][i];
                 
             }
             T++;
         }
         else if(dir==1)
         {
             for(int i=T;i<=B;i++)
                ans[c++]=A[i][R];
            R--;
         }
         else if(dir==2)
         {
             for(int i=R;i>=L;i--)
                ans[c++]=A[B][i];
            B--;
         }
         else if(dir==3)
         {
             for(int i=B;i>=T;i--)
             {
                 ans[c++]=A[i][L];
                 
             }
             L++;
         }
         dir=(dir+1)%4;
     }
     return ans;
    }
}
